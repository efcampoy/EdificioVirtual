name: EdificioVirtual
# decimos que cuando hagamos un push del proyecto de la rama main
on:
 push:
  branches: [main]
 
# entonces realizaremos los siguientes  trabajos
jobs:
 deploy:
  runs-on: ubuntu-latest
  steps:
  - name: Imprimir la variable tf_actions_working_dir
    run: echo "tf_actions_working_dir=${{ env.tf_actions_working_dir }}"
  - name: checkout
    uses: actions/checkout@v4.2.1
  - name: CONFIGURAR CREDENCIALES AWS
    uses: aws-actions/configure-aws-credentials@v4
    with:
     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
     aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
     aws-region: "us-east-1" # Cambia a la región de AWS que está s usando
     # creamos key publica para la instancia  de aws
  - name: Crear Directorio Terraform si No Existe
    run: mkdir -p terraform

  - name: Create SSH Key File
    run: |
     echo "${{ secrets.BUILDING_SERVER_KEY }}" > ./terraform/building_web.key.pub
  - name: Cambiar Permisos del Archivo
    run: chmod 600 terraform/building_web.key.pub

  - name: Listar Contenido del Directorio Terraform
    run: ls -la terraform/

  - name: Listar Archivos Antes de Terraform
    run: |
     echo "Archivos en el directorio:"
     ls -la terraform/
     echo "Intentando leer archivo:"
     cat terraform/building_web.key.pub

    

  - name: Pausa para asegurar la creación del archivo 
    run: sleep 5
    
  - name: Set up Terraform
    uses: hashicorp/setup-terraform@v3
  - name: Initialize Terraform
    run: terraform init
    working-directory: ./terraform
  - name: Verificar Archivos Después de Apply 2222222222222
    run: |
      echo "Listado de archivos después de terraform apply:"
      ls -la ./terraform
  - name: Terraform plan
    run: terraform plan -no-color
    working-directory: ./terraform
  - name: Terraform apply
    id: apply  # Necesitamos el id para el output de la instancia para obtener la ip publica
    run: terraform apply -auto-approve
    working-directory: ./terraform
  - name: Mostrar Outputs de Terraform y Asignar a Variable
    id: get_output
    run: echo "building_public_ip=$(terraform output -raw building_public_ip)" >> $GITHUB_ENV
    working-directory: ./terraform
  - name: Mostrar Outputs de Terraform
    run: terraform output
    working-directory: ./terraform
    
  - name: Upload Terraform State
    uses: actions/upload-artifact@v4
    with:
      name: terraform.tfstate
      path: ./terraform
  - name: Pausa para asegurar la creación del archivo 
    run: sleep 10
  - name: copy file via ssh key
    uses: appleboy/scp-action@v0.1.7
    with:
    # Cogemos la ip publica de nuestro archivo outputs terraform
     host: ${{ env.building_public_ip }}
     username: ${{ secrets.BUILDING_USERNAME }}
     port: ${{ secrets.BUILDING_PORT }}
     key: ${{ secrets.BUILDING_KEY }}
     source: |
      index.html
      css/**
      js/**
      assets/**
      pages/**
     target: /var/www/html
     
